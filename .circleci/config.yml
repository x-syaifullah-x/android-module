version: 2.1
jobs:
  build__unit_test__instrument_test__code_coverage:
    machine:
      image: android:202102-01
    resource_class: large
    steps:
      - checkout
      - run:
          name: Create avd
          command: |
            SYSTEM_IMAGES="system-images;android-30;google_apis;x86"
            sdkmanager "$SYSTEM_IMAGES"
            echo "no" | avdmanager --verbose create avd -n test --device "pixel" -k "$SYSTEM_IMAGES"
      - run:
          name: Launch emulator
          command: |
            emulator -avd test -delay-adb -verbose -no-window -noaudio -no-boot-anim -memory 4096 -accel on -qemu -enable-kvm
          background: true
      - run:
          name: Genarate cache key
          command: |
            find . -name 'build.gradle' | sort | xargs cat |
            shasum | awk '{print $1}' > /tmp/gradle_cache_seed
      - restore_cache:
          key: gradle-v0-{{ arch }}-{{ checksum "/tmp/gradle_cache_seed" }}
      - run:
          name: Generate key store
          command: |
            DESTINATION=~/.android
            if [ ! -d ${DESTINATION} ]; then
              mkdir -p ${DESTINATION}
            fi
            echo "$DEBUG_STORE_FILE_ASC_BASE64" | base64 --decode |
            gpg -d --passphrase $DEBUG_STORE_FILE_ASC_BASE64_PASSPHRASE --batch > ${DESTINATION}/debug.keystore
      - run:
          name: Change gradle properties
          command: |
            ORG_GRADLE_JVM=`cat gradle.properties | grep org.gradle.jvmargs`
            sed -i 's/'"${ORG_GRADLE_JVM}"'/org.gradle.jvmargs=-Xmx8192m -Dfile.encoding=UTF-8/g' gradle.properties
            cat gradle.properties | grep org.gradle.jvmargs
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          key: gradle-v0-{{ arch }}-{{ checksum "/tmp/gradle_cache_seed" }}
          paths:
            - ~/.gradle
      - run:
          name: Clean build
          command: ./gradlew clean build
      - run:
          name: Unit test
          command: ./gradlew test
      - run:
          name: Wait for emulator to start
          command: circle-android wait-for-boot
      - run:
          name: Disable emulator animations and close system dialog
          command: |
            adb shell settings put global window_animation_scale 0.0
            adb shell settings put global transition_animation_scale 0.0
            adb shell settings put global animator_duration_scale 0.0
            adb shell am broadcast -a android.intent.action.CLOSE_SYSTEM_DIALOGS
            # Send keystroke Arrow Right
            sleep 3; adb shell input keyevent 22
            # Send keystroke Arrow Right again
            sleep 3; adb shell input keyevent 22
            # Send keystroke Enter to press a button on the dialog
            sleep 3; adb shell input keyevent 66
            adb shell input keyevent 82
      - run:
          name: Instrument test
          command: |
            ./gradlew connectedDebugAndroidTest
      - run:
          name: Code coverage
          command: |
            ./gradlew debugCodeCoverage
      - run:
          name: Create Result Directory
          command: |
            DIR_DES_COVERAGE=~/android-module/code-coverage-archive
            mkdir -p $DIR_DES_COVERAGE
            for i in `find . -name *-code-coverage`; do
                cp -rf ${i} $DIR_DES_COVERAGE
            done

            DIR_DES_TEST_RESULTS=~/android-module/test-results-archive
            mkdir -p $DIR_DES_TEST_RESULTS
            for i in `find . -name test-results`; do
              cp -rf ${i}/* $DIR_DES_TEST_RESULTS
            done
      - store_artifacts:
          name: Uploading artifacts coverage
          path: ~/android-module/code-coverage-archive
          destination: code_coverage
      - store_artifacts:
          name: Uploading artifacts reports
          path: ~/android-module/reports
          destination: reports
      - store_artifacts:
          name: Uploading artifacts outputs
          path: ~/android-module/outputs-archive
          destination: outputs
      - store_test_results:
          path: ~/android-module/test-results-archive

  publish_maven:
    machine:
      image: android:202102-01
    resource_class: large

    steps:
      - checkout
      - run:
          name: Genarate cache key
          command: |
            find . -name 'build.gradle' | sort | xargs cat |
            shasum | awk '{print $1}' > /tmp/gradle_cache_seed
      - restore_cache:
          key: gradle-v0-{{ arch }}-{{ checksum "/tmp/gradle_cache_seed" }}
      - run:
          name: Change gradle properties
          command: |
            ORG_GRADLE_JVM=`cat gradle.properties | grep org.gradle.jvmargs`
            sed -i 's/'"${ORG_GRADLE_JVM}"'/org.gradle.jvmargs=-Xmx8192m -Dfile.encoding=UTF-8/g' gradle.properties
            cat gradle.properties | grep org.gradle.jvmargs
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          key: gradle-v0-{{ arch }}-{{ checksum "/tmp/gradle_cache_seed" }}
          paths:
            - ~/.gradle
      - run:
          name: Publish to mavenLocal
          command: ./gradlew clean publishToMavenLocal
      - run:
          name: Create artifacts maven local
          command: |
            mkdir -p ~/maven-local-result
            cd ~/
            tar czvf ~/maven-local-result/id.xxx.module.tar.gz .m2/repository/id/xxx/module
      - store_artifacts:
          name: Uploading artifacts maven local
          path: ~/maven-local-result
          destination: result

workflows:
  build:
    jobs:
      - build__unit_test__instrument_test__code_coverage:
          context:
            - android-key-store
      - publish_maven:
          requires:
            - build__unit_test__instrument_test__code_coverage
